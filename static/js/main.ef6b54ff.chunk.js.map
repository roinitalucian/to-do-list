{"version":3,"sources":["logo.svg","hoc/Aux.js","components/Layout/Layout.js","components/List/ListEntry/ListEntry.js","components/List/FilterForm/FilterForm.js","components/List/AddForm/AddForm.js","components/List/List.js","containers/ToDoList/ToDoList.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","aux","props","children","layout","Aux","className","ListEntry","this","status","title","description","data-toggle","align","style","fontSize","href","onClick","clickDelete","priority","type","clickComplete","Component","FilterForm","state","value","id","onChange","showExpiredClick","htmlFor","showCompletedClick","sort","AddForm","reverseButton","b","document","getElementById","b2","display","placeholder","name","rows","aria-hidden","data-target","List","toDos","deadline","showExpired","showCompleted","deleteEntryHandler","index","splice","setState","completeHandler","showExpiredHandler","showCompletedHandler","sortHandler","event","console","log","target","prioritySort","a","list","map","entry","ToDoList","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.ef6b54ff.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","const aux = (props) => props.children;\n\nexport default aux;","import React from 'react';\nimport Aux from '../../hoc/Aux';\nimport classes from './Layout.css';\n\nconst layout = (props) => (\n    <Aux>\n    <main className='Content'>\n        {props.children}\n    </main>\n    </Aux>\n);\n\nexport default layout;","import React, { Component } from 'react';\nimport './ListEntry.css'\nimport Aux from '../../../hoc/Aux';\n\nclass ListEntry extends Component {\n    render() {\n\n        let st = this.props.status;\n\n        return (\n            <Aux>\n            <div className='container'>\n                <div className={'card list-entry ' + this.props.status}>\n                    <div className='card-body'>\n                        <div className='d-flex'>\n                            <div>\n                                <h4 className='card-title'>\n                                    {this.props.title}\n                                </h4>\n                                <p className='card-text'>\n                                    {this.props.description}\n                                </p>\n                                <p>data</p>\n                            </div>\n                            <div className='ml-auto'>\n                                <div className='dropdown'>\n                                    <a data-toggle='dropdown'>\n                                        <p align='right'><i className='fas fa-bars' style={{fontSize:2+'vh'}} ></i></p>\n                                    </a>\n                                    <div className='dropdown-menu'>\n                                        <a className='dropdown-item' href='#'>Edit</a>\n                                        <a className='dropdown-item' href='#' onClick={this.props.clickDelete}>Delete</a>\n                                    </div>\n                                </div>\n                                <p align='right'>Priority: <span className={'pr-text ' + this.props.priority}>{this.props.priority}</span></p>\n                                <button type='button' className={'btn ' + this.props.status + '-btn'} onClick={this.props.clickComplete}>\n                                    Mark as completed\n                                </button>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            </Aux>\n        );\n    }\n};\n\nexport default ListEntry;","import React, { Component } from 'react';\nimport './FilterForm.css'\nimport Aux from '../../../hoc/Aux';\n\nclass FilterForm extends Component {\n\n    state = {\n        value : 'default'\n    }\n\n    render() {\n        return(\n            <Aux>\n            <div className='container'>\n                <div className='d-flex justify-content-end'>\n                    <div>\n                        <input type='checkbox' id='showExpired' className='checkLabel' onChange={this.props.showExpiredClick} />\n                        <label htmlFor='showExpired' className='checkLabel'>Hide expired</label><br />\n                    </div>\n                    <div>\n                        <input type='checkbox' id='showCompleted' className='checkLabel' onChange={this.props.showCompletedClick} />\n                        <label htmlFor='showCompleted' className='checkLabel'>Hide completed</label><br />\n                    </div>\n                    <div>\n                        <label htmlFor='sortBy' className='checkLabel'>Sort by:</label>\n                        <select id='sortBy' className='checkLabel' onChange={this.props.sort}>\n                        <option value='default'>default</option>\n                        <option value='date'>due date</option>\n                        <option value='priority'>priority</option>\n                        </select>\n                    </div>    \n                </div>\n\n            </div>\n\n            </Aux>\n        );\n    }\n}\n\nexport default FilterForm;","import React, { Component } from 'react';\nimport './AddForm.css'\nimport Aux from '../../../hoc/Aux';\n\nclass AddForm extends Component {\n\n    reverseButton = () => {\n        let b = document.getElementById('plusButton');\n        let b2 = document.getElementById('submitButton');\n        if (b.className === 'fa fa-plus-square') {\n            b.className = 'fa fa-minus-square';\n            b2.style.display = 'initial';\n        } else {\n            b.className = 'fa fa-plus-square';\n            b2.style.display = 'none';\n        }\n    }\n\n    render() {\n        return(\n            <Aux>\n            <div className='container'>\n                <div id='demo' className='collapse'>\n                    <div className='form-group'>\n                        <input type='text' className='form-control' placeholder='Title' name='title' />\n                    </div>\n                    <div className='form-group'>\n                        <textarea rows='4' className='form-control' placeholder='Description' name='description' />\n                    </div>\n                    <div className='form-group'>\n                    <form className='form-inline'>\n                        <label htmlFor=\"prioritySelect\" className='marginRight'>Priority:</label>\n                        <select className=\"form-control form-control-sm\" id='prioritySelect' name='priority'>\n                            <option>low</option>\n                            <option>moderate</option>\n                            <option>high</option>\n                        </select>\n\n                        <label htmlFor=\"dateSelect\" className='marginRight marginLeft'>Due date:</label>\n                        <input className='form-control form-control-sm' type='date' id='dateSelect' name='date' />\n\n\n                    </form>\n                </div>\n\n                </div>\n                <div className='form-group'>\n                    <i type='button' className='fa fa-plus-square' aria-hidden='true' data-toggle='collapse'\n                    data-target='#demo' style={{fontSize:7+'vh'}} onClick={this.reverseButton} id='plusButton' />\n                    <i type='button' className='fa fa-plus-square' aria-hidden='true'\n                    style={{fontSize:7+'vh'}}  id='submitButton' />\n                </div>\n            </div>\n\n            </Aux>\n        );\n    }\n}\n\nexport default AddForm;","import React, { Component } from 'react';\nimport Aux from '../../hoc/Aux'\nimport ListEntry from './ListEntry/ListEntry';\nimport FilterForm from './FilterForm/FilterForm';\nimport AddForm from './AddForm/AddForm';\n\nclass List extends Component {\n    \n    state = {\n        toDos : [\n         { title: 'PC Homework', description: 'Implement a router', deadline: '24/05/2020', priority: 'high', status: 'expired' },\n         { title: 'Music system', description: 'Repair the music system cassette player', deadline: '02/04/2020', priority: 'moderate', status: 'completed' },\n         { title: 'Eat', description: 'Eat pateu cu paine', deadline: '14/10/2019', priority: 'low', status: 'due' }\n        ],\n\n        showExpired : true,\n        showCompleted : true\n    }\n\n    deleteEntryHandler = (index) => {\n        const toDos = [...this.state.toDos];\n        toDos.splice(index, 1);\n        this.setState({toDos: toDos});\n    }\n\n    completeHandler = (index) => {\n        const toDos = [...this.state.toDos];\n        toDos[index].status = 'completed';\n        this.setState({toDos: toDos});\n    }\n\n    showExpiredHandler = () => {\n        this.setState({showExpired: !this.state.showExpired});\n        // document.getElementById('showExpired').checked = false;\n    }\n\n    showCompletedHandler = () => {\n        this.setState({showCompleted: !this.state.showCompleted});\n    }\n\n    prioritySort (a, b) {\n        if (a.priority === b.priority) {\n            return 0;\n        } else if (a.priority === 'high' || (a.priority === 'moderate' && b.priority === 'low')) {\n            return -1;\n        } else {\n            return 1;\n        }\n    }\n\n    sortHandler = (event) => {\n        console.log(event.target.value);\n        const toDos = [...this.state.toDos];\n        switch (event.target.value) {\n            case 'priority':\n                toDos.sort(this.prioritySort);\n                break;\n        }\n        this.setState({toDos: toDos});\n    }\n\n    render() {\n\n        let list = this.state.toDos.map((entry, index) => {\n            if (this.state.showExpired === false && entry.status === 'expired') {\n                return null;\n            }\n\n            if (this.state.showCompleted === false && entry.status === 'completed') {\n                return null;\n            }\n\n            return <ListEntry\n            clickDelete = {() => this.deleteEntryHandler(index)}\n            clickComplete = {() => this.completeHandler(index)}\n            title={entry.title}\n            description={entry.description}\n            deadline={entry.deadline}\n            priority={entry.priority}\n            status={entry.status} />\n        });\n\n        return (\n            <Aux>\n                <AddForm />\n\n                <FilterForm\n                showExpiredClick = {this.showExpiredHandler}\n                showCompletedClick = {this.showCompletedHandler}\n                sort = {this.sortHandler}\n                />\n                {list}\n            </Aux>\n        );\n    }\n\n};\n\nexport default List;","import React, {Component} from 'react';\nimport Aux from '../../hoc/Aux';\n\nimport List from '../../components/List/List'\n\nclass ToDoList extends Component {\n    render() {\n        return (\n            <Aux>\n                <List />\n            </Aux>\n        );\n    }\n}\n\nexport default ToDoList;","import React from 'react';\nimport logo from './logo.svg';\nimport Layout from './components/Layout/Layout';\nimport ToDoList from './containers/ToDoList/ToDoList';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div>\n      <Layout>\n        <ToDoList />\n    \n      </Layout>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}