{"version":3,"sources":["hoc/Aux.js","components/Layout/Layout.js","components/List/ListEntry/ListEntry.js","components/List/FilterForm/FilterForm.js","components/List/AddForm/AddForm.js","components/List/List.js","containers/ToDoList/ToDoList.js","App.js","serviceWorker.js","index.js"],"names":["aux","props","children","layout","Aux","className","ListEntry","state","editMode","enterEditMode","setState","exitEditMode","formatDate","d","str","getFullYear","getMonth","getDate","getHours","getMinutes","saveEdit","event","preventDefault","editEntry","viewMode","this","status","title","description","deadline","toLocaleDateString","toLocaleTimeString","data-toggle","align","style","fontSize","onClick","clickDelete","priority","type","clickComplete","onSubmit","name","defaultValue","id","value","Component","FilterForm","onChange","showExpiredClick","htmlFor","showCompletedClick","sort","AddForm","reverseButton","b","document","getElementById","b2","display","submitForm","addClick","bind","placeholder","rows","aria-hidden","data-target","List","toDos","showExpired","showCompleted","idMax","deleteEntryHandler","index","splice","completeHandler","showExpiredHandler","showCompletedHandler","sortHandler","console","log","target","prioritySort","deadlineSort","defaultSort","addHandler","new_title","new_description","new_date","Date","date","new_priority","unshift","editEntryHandler","a","list","map","entry","key","ToDoList","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.4f0abe9b.chunk.js","sourcesContent":["const aux = (props) => props.children;\n\nexport default aux;","import React from 'react';\nimport Aux from '../../hoc/Aux';\nimport './Layout.css';\n\nconst layout = (props) => (\n    <Aux>\n    <main className='Content'>\n        {props.children}\n    </main>\n    </Aux>\n);\n\nexport default layout;","import React, { Component } from 'react';\nimport './ListEntry.css'\nimport Aux from '../../../hoc/Aux';\n\nclass ListEntry extends Component {\n\n    state = {\n        editMode: false\n    }\n\n    enterEditMode = () => {\n        this.setState({editMode: true});\n    }\n\n    exitEditMode = () => {\n        this.setState({editMode: false});\n    }\n\n    formatDate = (d) => {\n        // console.log(d.getFullYear());\n        let str = d.getFullYear() +'-';\n\n        if (d.getMonth() < 9) {\n            str = str + '0';\n        }\n\n        str = str + (d.getMonth() + 1) + '-';\n\n        if (d.getDate() < 9) {\n            str = str + '0';\n        }\n\n        str = str + d.getDate() + 'T';\n\n        if (d.getHours() < 9) {\n            str = str + '0';\n        }\n\n        str = str + d.getHours() + ':';\n\n        if (d.getMinutes() < 9) {\n            str = str + '0';\n        }\n\n        str = str + d.getMinutes();\n\n        // console.log(str);\n        // console.log('-' + d.getDate());\n        // console.log('T' + d.getHours());\n        // console.log(':' + d.getMinutes());\n\n        return str;\n    }\n\n    saveEdit = (event) => {\n        event.preventDefault();\n        this.props.editEntry(event);\n        this.setState({editMode: false});\n    }\n\n    render() {\n\n        let viewMode = <Aux>\n        <div className='container'>\n            <div className={'card list-entry ' + this.props.status}>\n                <div className='card-body'>\n                    <div className='d-flex'>\n                        <div>\n                            <h4 className='card-title'>\n                                {this.props.title}\n                            </h4>\n                            <p className='card-text'>\n                                {this.props.description}\n                            </p>\n                            <p>{this.props.deadline.toLocaleDateString()} {this.props.deadline.toLocaleTimeString()}</p>\n                        </div>\n                        <div className='ml-auto'>\n                            <div className='dropdown'>\n                                <div data-toggle='dropdown'>\n                                    <p align='right'><i className='fas fa-bars' style={{fontSize:2.5+'vh'}} ></i></p>\n                                </div>\n                                <div className='dropdown-menu'>\n                                    <div className='dropdown-item' onClick={this.enterEditMode}>Edit</div>\n                                    <div className='dropdown-item' onClick={this.props.clickDelete}>Delete</div>\n                                </div>\n                            </div>\n                            <p align='right'>Priority: <span className={'pr-text ' + this.props.priority}>{this.props.priority}</span></p>\n                            <button type='button' className={'btn ' + this.props.status + '-btn'} onClick={this.props.clickComplete}>\n                                Mark as completed\n                            </button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n        </Aux>;\n\n        let editMode = <Aux>\n        <form onSubmit={this.saveEdit}>\n        <div className='container'>\n            <div className={'card list-entry ' + this.props.status}>\n                <div className='card-body'>\n                    <div className='d-flex'>\n                        <div>\n                            <h4 className='card-title'>\n                                <input className='form-control' type='text' name='title' defaultValue={this.props.title}/>\n                            </h4>\n                            <p className='card-text'>\n                                <textarea className='form-control' name='description' defaultValue={this.props.description} />\n                            </p>\n                            <p>\n                                <input className='form-control form-control-sm' type='datetime-local'\n                                id='dateSelect' name='date' defaultValue={this.formatDate(this.props.deadline)} />\n                            </p>\n                        </div>\n                        <div className='ml-auto'>\n                            <div className='dropdown'>\n                                <div data-toggle='dropdown'>\n                                    <p align='right'><i className='fas fa-bars' style={{fontSize:2.5+'vh'}} ></i></p>\n                                </div>\n                                <div className='dropdown-menu'>\n                                    <div className='dropdown-item'>Edit</div>\n                                    <div className='dropdown-item' onClick={this.props.clickDelete}>Delete</div>\n                                </div>\n                            </div>\n                            <p className='form-inline' align='right'>Priority: \n                            <select className='marginLeft form-control form-control-sm' id='prioritySelect'\n                            defaultValue={this.props.priority}  name='priority'>\n                                <option value='low'>low</option>\n                                <option value='moderate'>moderate</option>\n                                <option value='high'>high</option>\n                            </select>\n                             </p>\n                             <div className='marginRightZero'>\n                                <button type='button' className={'marginRight btn'} onClick={this.exitEditMode}>\n                                    Cancel\n                                </button>\n                                <input type='submit' className={'btn'} value='Save' />\n                             </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n        </form>\n        </Aux>;\n\n        let selectedMode = viewMode;\n        if (this.state.editMode) {\n            selectedMode = editMode;\n        } else {\n            selectedMode = viewMode;\n        }\n\n        return (\n            selectedMode\n        );\n    }\n};\n\nexport default ListEntry;","import React, { Component } from 'react';\nimport './FilterForm.css'\nimport Aux from '../../../hoc/Aux';\n\nclass FilterForm extends Component {\n\n    state = {\n        value : 'default'\n    }\n\n    render() {\n        return(\n            <Aux>\n            <div className='container'>\n                <div className='d-flex justify-content-end'>\n                    <div>\n                        <input type='checkbox' id='showExpired' className='checkLabel' onChange={this.props.showExpiredClick} />\n                        <label htmlFor='showExpired' className='checkLabel'>Hide expired</label><br />\n                    </div>\n                    <div>\n                        <input type='checkbox' id='showCompleted' className='checkLabel' onChange={this.props.showCompletedClick} />\n                        <label htmlFor='showCompleted' className='checkLabel'>Hide completed</label><br />\n                    </div>\n                    <div>\n                        <label htmlFor='sortBy' className='checkLabel'>Sort by:</label>\n                        <select id='sortBy' className='checkLabel' onChange={this.props.sort}>\n                            <option value='default'>default</option>\n                            <option value='date'>due date</option>\n                            <option value='priority'>priority</option>\n                        </select>\n                    </div>    \n                </div>\n\n            </div>\n\n            </Aux>\n        );\n    }\n}\n\nexport default FilterForm;","import React, { Component } from 'react';\nimport './AddForm.css'\nimport Aux from '../../../hoc/Aux';\n\nclass AddForm extends Component {\n\n    reverseButton = () => {\n        let b = document.getElementById('plusButton');\n        let b2 = document.getElementById('submitButton');\n        if (b.className === 'fa fa-plus-square') {\n            b.className = 'fa fa-minus-square';\n            b2.style.display = 'initial';\n        } else {\n            b.className = 'fa fa-plus-square';\n            b2.style.display = 'none';\n        }\n    }\n\n    submitForm = () => {\n        // document.getElementById('addForm').submit();\n    }\n\n    render() {\n        return(\n            <Aux>\n            <form onSubmit={this.props.addClick.bind(this)} id='addForm'>\n\n            <div className='container'>\n                <div id='demo' className='collapse'>\n                    <div className='form-group'>\n                        <input type='text' className='form-control' placeholder='Title' name='title' />\n                    </div>\n                    <div className='form-group'>\n                        <textarea rows='4' className='form-control' placeholder='Description' name='description' />\n                    </div>\n                    <div className='form-group'>\n                        <div className='form-inline'>\n                            <label htmlFor='prioritySelect' className='marginRight'>Priority:</label>\n                            <select className='form-control form-control-sm marginRight' id='prioritySelect'\n                            defaultValue='moderate' name='priority'>\n                                <option value='low'>low</option>\n                                <option value='moderate'>moderate</option>\n                                <option value='high'>high</option>\n                            </select>\n\n                            <label htmlFor='dateSelect' className='marginRight'>Due date:</label>\n                            <input className='form-control form-control-sm' type='datetime-local' id='dateSelect' name='date' />\n                        </div>\n                    </div>\n\n                </div>\n                <div className='form-group'>\n                    <i type='button' className='fa fa-plus-square' aria-hidden='true' data-toggle='collapse'\n                    data-target='#demo' style={{fontSize:7+'vh'}} onClick={this.reverseButton} id='plusButton' />\n                    <input type='submit' className='fa fa-plus-square' aria-hidden='true'\n                    style={{fontSize:7+'vh'}}  id='submitButton' />\n                </div>\n            </div>\n            </form>\n\n            </Aux>\n        );\n    }\n}\n\nexport default AddForm;","import React, { Component } from 'react';\nimport Aux from '../../hoc/Aux'\nimport ListEntry from './ListEntry/ListEntry';\nimport FilterForm from './FilterForm/FilterForm';\nimport AddForm from './AddForm/AddForm';\n\nclass List extends Component {\n    \n    state = {\n        toDos : [\n        //  { title: 'PC Homework', description: 'Implement a router', deadline: '24/05/2020', priority: 'high', status: 'expired' },\n        //  { title: 'Music system', description: 'Repair the music system cassette player', deadline: '02/04/2020', priority: 'moderate', status: 'completed' },\n        //  { title: 'Eat', description: 'Eat pateu cu paine', deadline: '14/10/2019', priority: 'low', status: 'due' }\n        ],\n\n        showExpired : true,\n        showCompleted : true\n    }\n\n    idMax = 0;\n\n    deleteEntryHandler = (index) => {\n        const toDos = [...this.state.toDos];\n        toDos.splice(index, 1);\n        this.setState({toDos: toDos});\n    }\n\n    completeHandler = (index) => {\n        const toDos = [...this.state.toDos];\n        toDos[index].status = 'completed';\n        this.setState({toDos: toDos});\n    }\n\n    showExpiredHandler = () => {\n        this.setState({showExpired: !this.state.showExpired});\n    }\n\n    showCompletedHandler = () => {\n        this.setState({showCompleted: !this.state.showCompleted});\n    }\n\n    prioritySort (a, b) {\n        if (a.priority === b.priority) {\n            return 0;\n        } else if (a.priority === 'high' || (a.priority === 'moderate' && b.priority === 'low')) {\n            return -1;\n        } else {\n            return 1;\n        }\n    }\n\n    deadlineSort(a, b) {\n        if (a.deadline < b.deadline) {\n            return -1;\n        } else {\n            return 1;\n        }\n    }\n\n    defaultSort(a, b) {\n        if (a.id > b.id) {\n            return -1;\n        } else {\n            return 1;\n        }\n    }\n\n    sortHandler = (event) => {\n        console.log(event.target.value);\n        const toDos = [...this.state.toDos];\n        switch (event.target.value) {\n            case 'priority':\n                toDos.sort(this.prioritySort);\n                break;\n            case 'date':\n                toDos.sort(this.deadlineSort);\n                break;\n            default:\n                toDos.sort(this.defaultSort);\n                break;\n        }\n        this.setState({toDos: toDos});\n    }\n\n    addHandler = (event) => {\n        event.preventDefault();\n        let new_title = event.target.title.value;\n        let new_description = event.target.description.value;\n        let new_date = new Date(event.target.date.value);\n        let new_priority = event.target.priority.value;\n        const toDos = [...this.state.toDos];\n        toDos.unshift({ id: (this.idMax++), title: new_title, description: new_description, deadline: new_date, priority: new_priority, status: 'due' });\n        this.setState({toDos: toDos});\n    }\n\n    editEntryHandler = (index) => (event) => {\n        event.preventDefault();\n        console.log(event);\n        console.log(index);\n\n        let new_title = event.target.title.value;\n        let new_description = event.target.description.value;\n        let new_date = new Date(event.target.date.value);\n        let new_priority = event.target.priority.value;\n        const toDos = [...this.state.toDos];\n        toDos[index].title = new_title;\n        toDos[index].description = new_description;\n        toDos[index].deadline = new_date;\n        toDos[index].priority = new_priority;\n        this.setState({toDos: toDos});\n    }\n\n    render() {\n\n        let list = this.state.toDos.map((entry, index) => {\n            if (this.state.showExpired === false && entry.status === 'expired') {\n                return null;\n            }\n\n            if (this.state.showCompleted === false && entry.status === 'completed') {\n                return null;\n            }\n\n            return <ListEntry\n            clickDelete={() => this.deleteEntryHandler(index)}\n            clickComplete={() => this.completeHandler(index)}\n            title={entry.title}\n            description={entry.description}\n            deadline={entry.deadline}\n            priority={entry.priority}\n            status={entry.status}\n            editEntry={this.editEntryHandler(index)}\n            key={entry.id} />\n        });\n\n        return (\n            <Aux>\n                <AddForm addClick={this.addHandler} />\n\n                <FilterForm\n                showExpiredClick = {this.showExpiredHandler}\n                showCompletedClick = {this.showCompletedHandler}\n                sort = {this.sortHandler}\n                />\n                {list}\n            </Aux>\n        );\n    }\n\n};\n\nexport default List;","import React, {Component} from 'react';\nimport Aux from '../../hoc/Aux';\n\nimport List from '../../components/List/List'\n\nclass ToDoList extends Component {\n    render() {\n        return (\n            <Aux>\n                <List />\n            </Aux>\n        );\n    }\n}\n\nexport default ToDoList;","import React from 'react';\nimport Layout from './components/Layout/Layout';\nimport ToDoList from './containers/ToDoList/ToDoList';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div>\n      <Layout>\n        <ToDoList />\n    \n      </Layout>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}